const e=JSON.parse('{"key":"v-69c6e192","path":"/series/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E4%B8%80%E5%8F%91%E5%85%A5%E9%AD%82/10-%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F.html","title":"汇编语言一发入魂 0x0A - 进入保护模式","lang":"zh-CN","frontmatter":{"title":"汇编语言一发入魂 0x0A - 进入保护模式","shortTitle":"进入保护模式","date":"2020-04-07T04:46:55.000Z","tag":["32位","保护模式"],"category":["汇编语言"],"description":"保护模式实际上很简单，只是概念比较多。今天老李就带领大家进入保护模式，然后在实操中逐一攻克每个概念。 进入保护模式 进入保护模式总共分三步。 第一步，打开A20地址线。 第二步，加载GDT。 第三步，将处理器切换到保护模式。 下面我们就来详细讲解一下这三个步骤。 A20 地址线 众所周知，8086处理器有20根地址线，可访问的最大内存地址是0xfffff，即1MB。32位处理器具有32根地址线，可访问的最大内存地址是0xffffffff，即4GB。在32位处理器刚面世的时候并没有太多针对32位处理器开发的软件，更多的是为8086开发的软件，计算机制造商为了能够兼容这些软件，便想出了一个办法，在计算机启动后将第21根地址线，即A20，置为0。这样，当地址超过0xfffff后，由于第21根地址线为0，所以地址又会绕回到0x00000开始。从外表上看就好像是一个16位的处理器。","head":[["meta",{"property":"og:url","content":"https://kviccn.github.io/series/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%E4%B8%80%E5%8F%91%E5%85%A5%E9%AD%82/10-%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"未央"}],["meta",{"property":"og:title","content":"汇编语言一发入魂 0x0A - 进入保护模式"}],["meta",{"property":"og:description","content":"保护模式实际上很简单，只是概念比较多。今天老李就带领大家进入保护模式，然后在实操中逐一攻克每个概念。 进入保护模式 进入保护模式总共分三步。 第一步，打开A20地址线。 第二步，加载GDT。 第三步，将处理器切换到保护模式。 下面我们就来详细讲解一下这三个步骤。 A20 地址线 众所周知，8086处理器有20根地址线，可访问的最大内存地址是0xfffff，即1MB。32位处理器具有32根地址线，可访问的最大内存地址是0xffffffff，即4GB。在32位处理器刚面世的时候并没有太多针对32位处理器开发的软件，更多的是为8086开发的软件，计算机制造商为了能够兼容这些软件，便想出了一个办法，在计算机启动后将第21根地址线，即A20，置为0。这样，当地址超过0xfffff后，由于第21根地址线为0，所以地址又会绕回到0x00000开始。从外表上看就好像是一个16位的处理器。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://kviccn.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-03T14:00:42.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"汇编语言一发入魂 0x0A - 进入保护模式"}],["meta",{"property":"article:author","content":"未央"}],["meta",{"property":"article:tag","content":"32位"}],["meta",{"property":"article:tag","content":"保护模式"}],["meta",{"property":"article:published_time","content":"2020-04-07T04:46:55.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-03T14:00:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"汇编语言一发入魂 0x0A - 进入保护模式\\",\\"image\\":[\\"https://kviccn.github.io/\\"],\\"datePublished\\":\\"2020-04-07T04:46:55.000Z\\",\\"dateModified\\":\\"2023-06-03T14:00:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"未央\\",\\"url\\":\\"https://kviccn.github.io\\"}]}"]]},"headers":[{"level":2,"title":"进入保护模式","slug":"进入保护模式","link":"#进入保护模式","children":[{"level":3,"title":"A20 地址线","slug":"a20-地址线","link":"#a20-地址线","children":[]},{"level":3,"title":"GDT (Global Descriptor Table)","slug":"gdt-global-descriptor-table","link":"#gdt-global-descriptor-table","children":[]},{"level":3,"title":"将处理器切换到保护模式","slug":"将处理器切换到保护模式","link":"#将处理器切换到保护模式","children":[]}]},{"level":2,"title":"实战","slug":"实战","link":"#实战","children":[{"level":3,"title":"代码","slug":"代码","link":"#代码","children":[]},{"level":3,"title":"解释","slug":"解释","link":"#解释","children":[]},{"level":3,"title":"编译、链接","slug":"编译、链接","link":"#编译、链接","children":[]},{"level":3,"title":"运行","slug":"运行","link":"#运行","children":[]}]}],"git":{"createdTime":1685800842000,"updatedTime":1685800842000,"contributors":[{"name":"kviccn","email":"kviccn@outlook.com","commits":1}]},"readingTime":{"minutes":11.61,"words":3484},"filePathRelative":"series/汇编语言一发入魂/10-进入保护模式.md","localizedDate":"2020年4月7日","excerpt":"<p>保护模式实际上很简单，只是概念比较多。今天老李就带领大家进入保护模式，然后在实操中逐一攻克每个概念。</p>\\n<h2> 进入保护模式</h2>\\n<p>进入保护模式总共分三步。</p>\\n<ul>\\n<li>第一步，打开<code>A20</code>地址线。</li>\\n<li>第二步，加载<code>GDT</code>。</li>\\n<li>第三步，将处理器切换到<code>保护模式</code>。</li>\\n</ul>\\n<p>下面我们就来详细讲解一下这三个步骤。</p>\\n<h3> A20 地址线</h3>\\n<p>众所周知，<code>8086</code>处理器有<code>20</code>根地址线，可访问的最大内存地址是<code>0xfffff</code>，即<code>1MB</code>。<code>32</code>位处理器具有<code>32</code>根地址线，可访问的最大内存地址是<code>0xffffffff</code>，即<code>4GB</code>。在<code>32</code>位处理器刚面世的时候并没有太多针对<code>32</code>位处理器开发的软件，更多的是为<code>8086</code>开发的软件，计算机制造商为了能够兼容这些软件，便想出了一个办法，在计算机启动后将第<code>21</code>根地址线，即<code>A20</code>，置为<code>0</code>。这样，当地址超过<code>0xfffff</code>后，由于第<code>21</code>根地址线为<code>0</code>，所以地址又会绕回到<code>0x00000</code>开始。从外表上看就好像是一个<code>16</code>位的处理器。</p>","autoDesc":true}');export{e as data};
