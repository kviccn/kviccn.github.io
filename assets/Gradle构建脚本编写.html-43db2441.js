const e=JSON.parse('{"key":"v-6ac42b88","path":"/series/Gradle%20%E5%AE%9E%E6%88%98/Gradle%E6%9E%84%E5%BB%BA%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99.html","title":"Gradle 构建脚本编写","lang":"zh-CN","frontmatter":{"title":"Gradle 构建脚本编写","date":"2023-06-03T22:00:00.000Z","category":["Gradle 实战"],"tag":["gradle"],"description":"Gradle 目前支持两种格式的构建脚本，分别基于 Groovy 和 Kotlin，对应的脚本文件名称为 build.gradle 和 build.gradle.kts。以基于 Kotlin 的脚本为例，当 gradle 命令启动时， gradle 会在当前目录下查找 build.gradle.kts 文件。尽管这个文件被称作 构建脚本，但严格意义上来说，它应该叫做 构建配置脚本，这个构建脚本定义了一个项目（project）和它的任务。","head":[["meta",{"property":"og:url","content":"https://kviccn.github.io/series/Gradle%20%E5%AE%9E%E6%88%98/Gradle%E6%9E%84%E5%BB%BA%E8%84%9A%E6%9C%AC%E7%BC%96%E5%86%99.html"}],["meta",{"property":"og:site_name","content":"未央"}],["meta",{"property":"og:title","content":"Gradle 构建脚本编写"}],["meta",{"property":"og:description","content":"Gradle 目前支持两种格式的构建脚本，分别基于 Groovy 和 Kotlin，对应的脚本文件名称为 build.gradle 和 build.gradle.kts。以基于 Kotlin 的脚本为例，当 gradle 命令启动时， gradle 会在当前目录下查找 build.gradle.kts 文件。尽管这个文件被称作 构建脚本，但严格意义上来说，它应该叫做 构建配置脚本，这个构建脚本定义了一个项目（project）和它的任务。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-04T14:47:29.000Z"}],["meta",{"property":"article:author","content":"未央"}],["meta",{"property":"article:tag","content":"gradle"}],["meta",{"property":"article:published_time","content":"2023-06-03T22:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-04T14:47:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Gradle 构建脚本编写\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-03T22:00:00.000Z\\",\\"dateModified\\":\\"2023-06-04T14:47:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"未央\\",\\"url\\":\\"https://kviccn.github.io\\"}]}"]]},"headers":[{"level":2,"title":"基础内容","slug":"基础内容","link":"#基础内容","children":[{"level":3,"title":"项目，插件和任务","slug":"项目-插件和任务","link":"#项目-插件和任务","children":[]},{"level":3,"title":"Hello world","slug":"hello-world","link":"#hello-world","children":[]},{"level":3,"title":"构建脚本即代码","slug":"构建脚本即代码","link":"#构建脚本即代码","children":[]},{"level":3,"title":"任务依赖","slug":"任务依赖","link":"#任务依赖","children":[]},{"level":3,"title":"灵活的任务注册","slug":"灵活的任务注册","link":"#灵活的任务注册","children":[]},{"level":3,"title":"操作已存在的任务","slug":"操作已存在的任务","link":"#操作已存在的任务","children":[]},{"level":3,"title":"默认任务","slug":"默认任务","link":"#默认任务","children":[]},{"level":3,"title":"构建脚本的外部依赖","slug":"构建脚本的外部依赖","link":"#构建脚本的外部依赖","children":[]}]},{"level":2,"title":"更多内容","slug":"更多内容","link":"#更多内容","children":[{"level":3,"title":"属性（Properties）","slug":"属性-properties","link":"#属性-properties","children":[]},{"level":3,"title":"Script API","slug":"script-api","link":"#script-api","children":[]},{"level":3,"title":"声明变量","slug":"声明变量","link":"#声明变量","children":[]}]}],"git":{"createdTime":1685890049000,"updatedTime":1685890049000,"contributors":[{"name":"kviccn","email":"kviccn@outlook.com","commits":1}]},"readingTime":{"minutes":7.78,"words":2335},"filePathRelative":"series/Gradle 实战/Gradle构建脚本编写.md","localizedDate":"2023年6月3日","excerpt":"<p>Gradle 目前支持两种格式的构建脚本，分别基于 Groovy 和 Kotlin，对应的脚本文件名称为 <code>build.gradle</code> 和 <code>build.gradle.kts</code>。以基于 Kotlin 的脚本为例，当 <code>gradle</code> 命令启动时，\\n<code>gradle</code> 会在当前目录下查找 <code>build.gradle.kts</code> 文件。尽管这个文件被称作 <em>构建脚本</em>，但严格意义上来说，它应该叫做 <em>构建配置脚本</em>，这个构建脚本定义了一个项目（project）和它的任务。</p>","autoDesc":true}');export{e as data};
