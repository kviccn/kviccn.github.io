import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,b as n,d as s,e as t,a as e}from"./app-a3b1dd03.js";const l="/assets/Nacos-Release-c42cad23.png",u="/assets/Nacos-unzip-41c9f196.png",r="/assets/Nacos-Dashboard-51279e49.png",d="/assets/Nacos-app1-cfg-19598db5.png",k="/assets/Nacos-app1-cfg-content-bfef8ed0.png",m="/assets/Nacos-IDEA-face1db0.png",v="/assets/Nacos-Startup-Error-15e34eba.png",b="/assets/Nacos-IDEA-options1-b0c49562.png",g="/assets/Nacos-IDEA-options2-b6355c6f.png",h="/assets/Nacos-Startup-success-664a19cb.png",f="/assets/Nacos-Playground-Java-SDK-Fetch-Config-3e45787d.png",y="/assets/Nacos-Playground-Java-SDK-Listen-Config1-8809b877.png",w="/assets/Nacos-Playground-Java-SDK-Change-Config-102aeac1.png",_="/assets/Nacos-Playground-Java-SDK-Listen-Config2-9a1bfc38.png",N="/assets/Nacos-Server-Register-19033401.png",x={},S={href:"https://nacos.io/",target:"_blank",rel:"noopener noreferrer"},q=n("h2",{id:"下载与启动",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载与启动","aria-hidden":"true"},"#"),s(" 下载与启动")],-1),C=n("p",null,"Nacos 作为一款开源软件我们可以选择使用构建好的安装包启动或者下载源码自行编译启动，下面分别演示两种方式。",-1),I=n("h3",{id:"通过构建好的安装包启动",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#通过构建好的安装包启动","aria-hidden":"true"},"#"),s(" 通过构建好的安装包启动")],-1),A={href:"https://github.com/alibaba/nacos/releases",target:"_blank",rel:"noopener noreferrer"},P=n("code",null,"2.2.3",-1),F=e('<figure><img src="'+l+'" alt="Nacos Release" tabindex="0" loading="lazy"><figcaption>Nacos Release</figcaption></figure><p>我本机是 Windows 环境所以选择下载 <code>zip</code> 包，下载完成后解压到自定义目录。</p><figure><img src="'+u+`" alt="Nacos unzip" tabindex="0" loading="lazy"><figcaption>Nacos unzip</figcaption></figure><p>进入命令行并启动：</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code>$ <span class="token punctuation">.</span>\\bin\\startup<span class="token punctuation">.</span>cmd <span class="token operator">-</span>m standalone
<span class="token string">&quot;nacos is starting with standalone&quot;</span>

         <span class="token punctuation">,</span><span class="token operator">--</span><span class="token punctuation">.</span>
       <span class="token punctuation">,</span><span class="token operator">--</span><span class="token punctuation">.</span><span class="token string">&#39;|
   ,--,:  : |                                           Nacos 2.2.3
,\`--.&#39;</span>\`<span class="token punctuation">|</span>  <span class="token string">&#39; :                       ,---.               Running in stand alone mode, All function modules
|   :  :  | |                      &#39;</span>   <span class="token punctuation">,</span><span class="token string">&#39;\\   .--.--.    Port: 8848
:   |   \\ | :  ,--.--.     ,---.  /   /   | /  /    &#39;</span>   Pid: 17884
<span class="token punctuation">|</span>   : <span class="token string">&#39;  &#39;</span><span class="token punctuation">;</span> <span class="token punctuation">|</span> <span class="token operator">/</span>       \\   <span class="token operator">/</span>     \\<span class="token punctuation">.</span>   <span class="token punctuation">;</span> <span class="token punctuation">,</span><span class="token punctuation">.</span> :<span class="token punctuation">|</span>  :  <span class="token operator">/</span>\`<span class="token punctuation">.</span><span class="token operator">/</span>   Console: http:<span class="token operator">/</span><span class="token operator">/</span>192<span class="token punctuation">.</span>168<span class="token punctuation">.</span>56<span class="token punctuation">.</span>1:8848/nacos/index<span class="token punctuation">.</span>html
<span class="token string">&#39;   &#39;</span> <span class="token punctuation">;</span><span class="token punctuation">.</span>    <span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token operator">--</span><span class="token punctuation">.</span>  <span class="token punctuation">.</span><span class="token operator">-</span><span class="token punctuation">.</span> <span class="token punctuation">|</span> <span class="token operator">/</span>    <span class="token operator">/</span> <span class="token string">&#39;&#39;</span>   <span class="token punctuation">|</span> <span class="token punctuation">|</span>: :<span class="token punctuation">|</span>  :  <span class="token punctuation">;</span>_
<span class="token punctuation">|</span>   <span class="token punctuation">|</span> <span class="token punctuation">|</span> \\   <span class="token punctuation">|</span> \\__\\<span class="token operator">/</span>: <span class="token punctuation">.</span> <span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token string">&#39; / &#39;</span>   <span class="token punctuation">|</span> <span class="token punctuation">.</span><span class="token punctuation">;</span> : \\  \\    \`<span class="token punctuation">.</span>      https:<span class="token operator">/</span><span class="token operator">/</span>nacos<span class="token punctuation">.</span>io
<span class="token string">&#39;   : |  ; .&#39;</span> <span class="token punctuation">,</span>&quot; <span class="token punctuation">.</span><span class="token operator">--</span><span class="token punctuation">.</span><span class="token punctuation">;</span> <span class="token punctuation">|</span><span class="token string">&#39;   ; :__|   :    |  \`----.   \\
|   | &#39;</span>\`<span class="token operator">--</span><span class="token string">&#39;  /  /  ,.  |&#39;</span>   <span class="token punctuation">|</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">|</span>\\   \\  <span class="token operator">/</span>  <span class="token operator">/</span>  <span class="token operator">/</span>\`<span class="token operator">--</span><span class="token string">&#39;  /
&#39;</span>   : <span class="token punctuation">|</span>     <span class="token punctuation">;</span>  :   <span class="token punctuation">.</span><span class="token string">&#39;   \\   :    : \`----&#39;</span>  <span class="token string">&#39;--&#39;</span><span class="token punctuation">.</span>     <span class="token operator">/</span>
<span class="token punctuation">;</span>   <span class="token punctuation">|</span><span class="token punctuation">.</span><span class="token string">&#39;     |  ,     .-./\\   \\  /            \`--&#39;</span><span class="token operator">--</span><span class="token operator">-</span><span class="token string">&#39;
&#39;</span><span class="token operator">--</span><span class="token operator">-</span><span class="token string">&#39;        \`--\`---&#39;</span>     \`<span class="token operator">--</span><span class="token operator">--</span><span class="token string">&#39;

2023-06-25 15:47:26,177 INFO Tomcat initialized with port(s): 8848 (http)

2023-06-25 15:47:26,436 INFO Root WebApplicationContext: initialization completed in 4840 ms

2023-06-25 15:47:33,300 INFO Adding welcome page: class path resource [static/index.html]

2023-06-25 15:47:34,244 WARN You are asking Spring Security to ignore Ant [pattern=&#39;</span><span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span><span class="token string">&#39;]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.

2023-06-25 15:47:34,245 INFO Will not secure Ant [pattern=&#39;</span><span class="token operator">/</span><span class="token operator">*</span><span class="token operator">*</span><span class="token string">&#39;]

2023-06-25 15:47:34,294 INFO Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1c52552f, org.springframework.security.web.context.SecurityContextPersistenceFilter@7645f03e, org.springframework.security.web.header.HeaderWriterFilter@2bc7db89, org.springframework.security.web.csrf.CsrfFilter@20999517, org.springframework.security.web.authentication.logout.LogoutFilter@671ea6ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a6ea47d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cbbb9c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5dc769f9, org.springframework.security.web.session.SessionManagementFilter@173f1614, org.springframework.security.web.access.ExceptionTranslationFilter@6ec63f8]

2023-06-25 15:47:34,376 INFO Exposing 1 endpoint(s) beneath base path &#39;</span><span class="token operator">/</span>actuator<span class="token string">&#39;

2023-06-25 15:47:34,488 INFO Tomcat started on port(s): 8848 (http) with context path &#39;</span><span class="token operator">/</span>nacos&#39;

2023-06-25 15:47:34<span class="token punctuation">,</span>543 INFO Nacos started successfully in stand alone mode<span class="token punctuation">.</span> use embedded storage
</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>观察程序输出日志中出现 <code>successfully</code> 则说明启动成功。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>单机启动需要添加参数 <code> -m standalone</code>。</p></div>`,7),R={href:"http://localhost:8848/nacos",target:"_blank",rel:"noopener noreferrer"},O=n("p",null,"刚启动的 Nacos 中是没有任何配置和服务的：",-1),D=n("figure",null,[n("img",{src:r,alt:"Nacos Dashboard",tabindex:"0",loading:"lazy"}),n("figcaption",null,"Nacos Dashboard")],-1),T={href:"https://nacos.io/zh-cn/docs/v2/guide/user/open-api.html",target:"_blank",rel:"noopener noreferrer"},E=n("code",null,"curl",-1),j=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token string">&#39;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=app1.cfg&amp;group=test&amp;content=HelloWorld&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请求方式为 <code>POST</code>，并且传入了三个参数 <code>dataId</code>、<code>group</code> 和 <code>content</code>，值分别为 <code>app1.cfg</code>、<code>test</code> 和 <code>HelloWorld</code>，Nacos 本身便是通过 <code>dataId</code> 和 <code>group</code> 来定位一个配置的。</p>`,2),L={class:"hint-container tip"},B=n("p",{class:"hint-container-title"},"提示",-1),z=n("code",null,"git-bash",-1),U={href:"https://www.postman.com/",target:"_blank",rel:"noopener noreferrer"},G=e(`<p>如上所述，我们也可以通过 Nacos API 来获取一个配置：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-X</span> GET <span class="token string">&quot;http://127.0.0.1:8848/nacos/v1/cs/configs?dataId=app1.cfg&amp;group=test&quot;</span>
HelloWorld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>同时也可以通过管理界面验证，再次查询可看到配置列表如下：</p><figure><img src="`+d+'" alt="Nacos app1.cfg" tabindex="0" loading="lazy"><figcaption>Nacos app1.cfg</figcaption></figure><p>点击详情可以看到内容也与我们设置的一致：</p><figure><img src="'+k+'" alt="Nacos app1.cfg content" tabindex="0" loading="lazy"><figcaption>Nacos app1.cfg content</figcaption></figure><h3 id="通过源码启动" tabindex="-1"><a class="header-anchor" href="#通过源码启动" aria-hidden="true">#</a> 通过源码启动</h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>此处我们选择通过 <code>idea</code> 启动 Nacos，以便调试和学习。</p></div><p>通过 <code>git</code> 将 nacos 源码克隆到本地 <code>git clone https://github.com/alibaba/nacos.git</code> 并导入 <code>idea</code>，如下：</p><figure><img src="'+m+'" alt="Nacos IDEA" tabindex="0" loading="lazy"><figcaption>Nacos IDEA</figcaption></figure><p>此时如果直接启动的话会提示有些类找不到，这需要先对项目进行编译，在 IDEA 中打开 Maven 工具栏，点击 <code>Toggle &#39;Skip Tests&#39; Mode</code>，点击 <code>compile</code> 等待编译完成后在运行主类。</p><p>再次运行发现还是会报错：</p><figure><img src="'+v+'" alt="Nacos Startup Error" tabindex="0" loading="lazy"><figcaption>Nacos Startup Error</figcaption></figure><p>这个问题很好解决，因为同样作为单机启动我们需要添加启动参数：</p><figure><img src="'+b+'" alt="Nacos IDEA options1" tabindex="0" loading="lazy"><figcaption>Nacos IDEA options1</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>添加启动参数 <code>-Dnacos.standalone=true</code></p></div><figure><img src="'+g+'" alt="Nacos IDEA options2" tabindex="0" loading="lazy"><figcaption>Nacos IDEA options2</figcaption></figure><p>再次运行：</p><figure><img src="'+h+'" alt="Nacos startup success" tabindex="0" loading="lazy"><figcaption>Nacos startup success</figcaption></figure><p>启动成功，通过源码和控制台输出我们也很容易看出来 Nacos 本身也是基于 spring boot 构建的。</p><h2 id="配置管理" tabindex="-1"><a class="header-anchor" href="#配置管理" aria-hidden="true">#</a> 配置管理</h2><h3 id="通过-java-sdk-管理配置" tabindex="-1"><a class="header-anchor" href="#通过-java-sdk-管理配置" aria-hidden="true">#</a> 通过 Java SDK 管理配置</h3>',22),M={href:"https://gradle.org/",target:"_blank",rel:"noopener noreferrer"},$=e(`<h4 id="获取配置" tabindex="-1"><a class="header-anchor" href="#获取配置" aria-hidden="true">#</a> 获取配置</h4><p>创建并进入项目根目录 <code>nacos-playground</code>，依次创建 settings 文件和 build 文件，内容分别如下：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// filename: settings.gradle.kts</span>
rootProject<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;nacos-playground&quot;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// filename: build.gradle.kts</span>
plugins <span class="token punctuation">{</span>
    java
<span class="token punctuation">}</span>

repositories <span class="token punctuation">{</span>
    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

dependencies <span class="token punctuation">{</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.alibaba.nacos:nacos-client:2.2.3&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.slf4j:slf4j-api:2.0.7&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时项目结构如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">find</span> <span class="token builtin class-name">.</span>
<span class="token builtin class-name">.</span>
./build.gradle.kts
./settings.gradle.kts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将项目导入 IDEA 并编写主类，内容如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">NacosFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">ConfigService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">NacosException</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NacosPlayground</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> serverAddr <span class="token operator">=</span> <span class="token string">&quot;localhost:8848&quot;</span><span class="token punctuation">;</span>   <span class="token comment">// 指定服务器地址</span>
        <span class="token class-name">String</span> dataId <span class="token operator">=</span> <span class="token string">&quot;app1.cfg&quot;</span><span class="token punctuation">;</span>             <span class="token comment">// 指定配置 dataId</span>
        <span class="token class-name">String</span> group <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span>                  <span class="token comment">// 指定配置 group</span>

        <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;serverAddr&quot;</span><span class="token punctuation">,</span> serverAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ConfigService</span> configService <span class="token operator">=</span> <span class="token class-name">NacosFactory</span><span class="token punctuation">.</span><span class="token function">createConfigService</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> content <span class="token operator">=</span> configService<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取配置内容</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行程序输出结果如下：</p><figure><img src="`+f+`" alt="Nacos Playground Java SDK Fetch Config" tabindex="0" loading="lazy"><figcaption>Nacos Playground Java SDK Fetch Config</figcaption></figure><h4 id="监听配置" tabindex="-1"><a class="header-anchor" href="#监听配置" aria-hidden="true">#</a> 监听配置</h4><p>如果希望 Nacos 推送配置变更，可以使用 Nacos 动态监听配置接口来实现。</p><p>修改代码如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">NacosFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">ConfigService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">Listener</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">NacosException</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Executor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">TimeUnit</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NacosPlayground</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">NacosException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> serverAddr <span class="token operator">=</span> <span class="token string">&quot;localhost:8848&quot;</span><span class="token punctuation">;</span>   <span class="token comment">// 指定服务器地址</span>
        <span class="token class-name">String</span> dataId <span class="token operator">=</span> <span class="token string">&quot;app1.cfg&quot;</span><span class="token punctuation">;</span>             <span class="token comment">// 指定配置 dataId</span>
        <span class="token class-name">String</span> group <span class="token operator">=</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">;</span>                  <span class="token comment">// 指定配置 group</span>

        <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        properties<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;serverAddr&quot;</span><span class="token punctuation">,</span> serverAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ConfigService</span> configService <span class="token operator">=</span> <span class="token class-name">NacosFactory</span><span class="token punctuation">.</span><span class="token function">createConfigService</span><span class="token punctuation">(</span>properties<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> content <span class="token operator">=</span> configService<span class="token punctuation">.</span><span class="token function">getConfig</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取配置内容</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;初始内容: &quot;</span> <span class="token operator">+</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 为配置添加监听器</span>
        configService<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span>dataId<span class="token punctuation">,</span> group<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">Executor</span> <span class="token function">getExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">receiveConfigInfo</span><span class="token punctuation">(</span><span class="token class-name">String</span> configInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 实现配置更新后的回调方法</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;当前内容: &quot;</span> <span class="token operator">+</span> configInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 死循环使主线程不退出，正式代码中无需下面代码</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果如下：</p><figure><img src="`+y+'" alt="Nacos Playground Java SDK Listen Config1" tabindex="0" loading="lazy"><figcaption>Nacos Playground Java SDK Listen Config1</figcaption></figure><p>可以看到在获取到初始配置内容后程序并没有退出。</p><p>在管理界面修改并发布配置：</p><figure><img src="'+w+'" alt="Nacos Playground Java SDK Change Config" tabindex="0" loading="lazy"><figcaption>Nacos Playground Java SDK Change Config</figcaption></figure><p>回到程序控制台，发现程序已打印出最新配置：</p><figure><img src="'+_+'" alt="Nacos Playground Java SDK Listen Config2" tabindex="0" loading="lazy"><figcaption>Nacos Playground Java SDK Listen Config2</figcaption></figure>',21),J={href:"https://nacos.io/zh-cn/docs/v2/guide/user/sdk.html",target:"_blank",rel:"noopener noreferrer"},W=e(`<h3 id="整合-spring-boot" tabindex="-1"><a class="header-anchor" href="#整合-spring-boot" aria-hidden="true">#</a> 整合 Spring Boot</h3><p>修改 Gradle 构建脚本：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// filename: build.gradle.kts</span>
plugins <span class="token punctuation">{</span>
    java
    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.boot&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;2.7.13&quot;</span></span>
<span class="token punctuation">}</span>

<span class="token function">apply</span><span class="token punctuation">(</span>plugin <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;io.spring.dependency-management&quot;</span></span><span class="token punctuation">)</span>

repositories <span class="token punctuation">{</span>
    <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

dependencies <span class="token punctuation">{</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.alibaba.boot:nacos-config-spring-boot-starter:0.2.12&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新增配置文件：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># filename: application.properties</span>
<span class="token key attr-name">nacos.config.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:8848</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改主类，使用 <code>@NacosPropertySource</code> 加载 dataId 为 <code>nacos-playground</code> 的配置源，并开启自动更新：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>config<span class="token punctuation">.</span></span><span class="token class-name">NacosPropertySource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@NacosPropertySource</span><span class="token punctuation">(</span>dataId <span class="token operator">=</span> <span class="token string">&quot;nacos-playground&quot;</span><span class="token punctuation">,</span> autoRefreshed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NacosPlayground</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">NacosPlayground</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新增 Controller 类并通过 Nacos 的 <code>@NacosValue</code> 注解设置属性值：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">example</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>nacos<span class="token punctuation">.</span>api<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">NacosValue</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@NacosValue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;\${name}&quot;</span><span class="token punctuation">,</span> autoRefreshed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Nacos 管理界面新增配置 dataId 为 <code>nacos-playground</code>，group 为 <code>DEFAULT_GROUP</code>，配置内容为 <code>name=laoli</code>。</p><p>启动应用并访问新增的接口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> http://localhost:8080/config/name
laoli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>进入配置管理界面修改配置内容为 <code>name=weiyang</code>，再次请求接口：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> http://localhost:8080/config/name
weiyang
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到返回值已动态更新为配置中心的最新值。</p><h3 id="整合-spring-cloud" tabindex="-1"><a class="header-anchor" href="#整合-spring-cloud" aria-hidden="true">#</a> 整合 Spring Cloud</h3><h4 id="项目结构调整" tabindex="-1"><a class="header-anchor" href="#项目结构调整" aria-hidden="true">#</a> 项目结构调整</h4><p>为方便后续演示，我们将项目调整为多项目结构。</p><ol><li><p>执行 <code>gradle clean</code> 清理项目</p></li><li><p>删除 <code>src</code> 目录</p></li><li><p>调整 gradle 脚本</p><ul><li>替换 <code>settings.gradle.kts</code> 内容如下：</li></ul><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>rootProject<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;nacos-playground&quot;</span></span>

<span class="token function">include</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;app1&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>替换 <code>build.gradle.kts</code> 内容如下：</li></ul><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>plugins <span class="token punctuation">{</span>
    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.boot&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;2.6.13&quot;</span></span> apply <span class="token boolean">false</span>
    <span class="token function">id</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;io.spring.dependency-management&quot;</span></span><span class="token punctuation">)</span> version <span class="token string-literal singleline"><span class="token string">&quot;1.1.0&quot;</span></span>
<span class="token punctuation">}</span>

<span class="token keyword">val</span> springCloudVersion <span class="token keyword">by</span> <span class="token function">extra</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;2021.0.5&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">var</span> springCloudAlibabaVersion <span class="token keyword">by</span> <span class="token function">extra</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;2021.0.5.0&quot;</span></span><span class="token punctuation">)</span>

subprojects <span class="token punctuation">{</span>

    <span class="token function">apply</span><span class="token punctuation">(</span>plugin <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;java&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">apply</span><span class="token punctuation">(</span>plugin <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;org.springframework.boot&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">apply</span><span class="token punctuation">(</span>plugin <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;io.spring.dependency-management&quot;</span></span><span class="token punctuation">)</span>

    repositories <span class="token punctuation">{</span>
        <span class="token function">mavenLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">mavenCentral</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    dependencyManagement <span class="token punctuation">{</span>
        imports <span class="token punctuation">{</span>
            <span class="token function">mavenBom</span><span class="token punctuation">(</span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>gradle<span class="token punctuation">.</span>plugin<span class="token punctuation">.</span>SpringBootPlugin<span class="token punctuation">.</span>BOM_COORDINATES<span class="token punctuation">)</span>
            <span class="token function">mavenBom</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.cloud:spring-cloud-dependencies:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">springCloudVersion</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token function">mavenBom</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.alibaba.cloud:spring-cloud-alibaba-dependencies:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token expression">springCloudAlibabaVersion</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>新建 <code>app1</code> 目录作为子项目目录</p></li><li><p>在 <code>app1</code> 目录下创建 <code>build.gradle.kts</code> 作为子项目的构建脚本，内容如下：</p><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.cloud:spring-cloud-starter-bootstrap&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="整合子项目" tabindex="-1"><a class="header-anchor" href="#整合子项目" aria-hidden="true">#</a> 整合子项目</h4><ol><li>调整服务端口</li></ol><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># application.properties</span>
<span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8090</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>新增 <code>bootstrap.properties</code> 配置</li></ol><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># bootstrap.properties</span>

<span class="token comment"># 设置 Nacos 配置管理服务地址</span>
<span class="token key attr-name">spring.cloud.nacos.config.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:8848</span>

<span class="token comment"># 设置服务名称</span>
<span class="token key attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">app1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),V={class:"hint-container tip"},K=e('<p class="hint-container-title">提示</p><p>在 Nacos Spring Cloud 中，dataId 的完整格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>${prefix}-${spring.profiles.active}.${file-extension}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',3),H=n("li",null,[n("code",null,"prefix"),s(" 默认为 "),n("code",null,"spring.application.name"),s(" 的值，也可以通过配置项 "),n("code",null,"spring.cloud.nacos.config.prefix"),s(" 来配置。")],-1),X=n("code",null,"spring.profiles.active",-1),Y=n("code",null,"profile",-1),Q={href:"https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-profiles.html#boot-features-profiles",target:"_blank",rel:"noopener noreferrer"},Z=n("code",null,"spring.profiles.active",-1),nn=n("code",null,"${prefix}.${file-extension}",-1),sn=n("li",null,[n("code",null,"file-exetension"),s(" 为配置内容的数据格式，可以通过配置项 "),n("code",null,"spring.cloud.nacos.config.file-extension"),s(" 来配置。目前只支持 "),n("code",null,"properties"),s(" 和 "),n("code",null,"yaml"),s(" 类型。")],-1),an=e(`<ol start="3"><li>新建应用主类</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">example<span class="token punctuation">.</span>app1</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App1</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">App1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>新建 Controller 类</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">example<span class="token punctuation">.</span>app1</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>context<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RefreshScope</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RefreshScope</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${name}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们通过为类添加 Spring Cloud 原生注解 <code>@RefreshScope</code> 来实现配置自动更新。</p>`,5),tn={start:"5"},en={href:"https://nacos.io/zh-cn/docs/v2/guide/user/open-api.html",target:"_blank",rel:"noopener noreferrer"},pn=n("code",null,"app1.properties",-1),on=n("code",null,"name=app1-nacos",-1),cn=e(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token string">&quot;http://localhost:8848/nacos/v1/cs/configs?dataId=app1.properties&amp;group=DEFAULT_GROUP&amp;content=name=app1-nacos&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>启动服务并查看日志</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">..</span>.
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:14.375  WARN <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.c.n.c.NacosPropertySourceBuilder     <span class="token builtin class-name">:</span> Ignore the empty nacos configuration and get it based on dataId<span class="token punctuation">[</span>app1<span class="token punctuation">]</span> <span class="token operator">&amp;</span> group<span class="token punctuation">[</span>DEFAULT_GROUP<span class="token punctuation">]</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:14.388  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> b.c.PropertySourceBootstrapConfiguration <span class="token builtin class-name">:</span> Located property source: <span class="token punctuation">[</span>BootstrapPropertySource <span class="token punctuation">{</span>name<span class="token operator">=</span><span class="token string">&#39;bootstrapProperties-app1.properties,DEFAULT_GROUP&#39;</span><span class="token punctuation">}</span>, BootstrapPropertySource <span class="token punctuation">{</span>name<span class="token operator">=</span><span class="token string">&#39;bootstrapProperties-app1,DEFAULT_GROUP&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:14.397  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> example.app1.App1                        <span class="token builtin class-name">:</span> No active profile set, falling back to <span class="token number">1</span> default profile: <span class="token string">&quot;default&quot;</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:14.821  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> o.s.cloud.context.scope.GenericScope     <span class="token builtin class-name">:</span> BeanFactory <span class="token assign-left variable">id</span><span class="token operator">=</span>970ab93c-a20b-3ce3-aab5-db58140739ab
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:15.017  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> o.s.b.w.embedded.tomcat.TomcatWebServer  <span class="token builtin class-name">:</span> Tomcat initialized with port<span class="token punctuation">(</span>s<span class="token punctuation">)</span>: <span class="token number">8090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:15.026  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> o.apache.catalina.core.StandardService   <span class="token builtin class-name">:</span> Starting <span class="token function">service</span> <span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:15.026  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> org.apache.catalina.core.StandardEngine  <span class="token builtin class-name">:</span> Starting Servlet engine: <span class="token punctuation">[</span>Apache Tomcat/9.0.68<span class="token punctuation">]</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:15.189  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> o.a.c.c.C.<span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span>.<span class="token punctuation">[</span>localhost<span class="token punctuation">]</span>.<span class="token punctuation">[</span>/<span class="token punctuation">]</span>       <span class="token builtin class-name">:</span> Initializing Spring embedded WebApplicationContext
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:15.190  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> w.s.c.ServletWebServerApplicationContext <span class="token builtin class-name">:</span> Root WebApplicationContext: initialization completed <span class="token keyword">in</span> <span class="token number">784</span> ms
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:16.210  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> o.s.b.w.embedded.tomcat.TomcatWebServer  <span class="token builtin class-name">:</span> Tomcat started on port<span class="token punctuation">(</span>s<span class="token punctuation">)</span>: <span class="token number">8090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> with context path <span class="token string">&#39;&#39;</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:16.916  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> example.app1.App1                        <span class="token builtin class-name">:</span> Started App1 <span class="token keyword">in</span> <span class="token number">7.466</span> seconds <span class="token punctuation">(</span>JVM running <span class="token keyword">for</span> <span class="token number">8.807</span><span class="token punctuation">)</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:16.926  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.c.n.refresh.NacosContextRefresher    <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>Nacos Config<span class="token punctuation">]</span> Listening config: <span class="token assign-left variable">dataId</span><span class="token operator">=</span>app1.properties, <span class="token assign-left variable">group</span><span class="token operator">=</span>DEFAULT_GROUP
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:16.926  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.c.n.refresh.NacosContextRefresher    <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>Nacos Config<span class="token punctuation">]</span> Listening config: <span class="token assign-left variable">dataId</span><span class="token operator">=</span>app1, <span class="token assign-left variable">group</span><span class="token operator">=</span>DEFAULT_GROUP
<span class="token punctuation">..</span>.
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到因为我们没有设置 <code>profile</code>，所以最终拼接得到的 <code>dataId</code> 为 <code>app1.properties</code>，日志中也显示已启动对 <code>app1.properties</code> 的监听。</p><ol start="7"><li>请求接口</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-s</span> http://localhost:8090/config/name
app1-nacos
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>更新配置</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token string">&quot;http://localhost:8848/nacos/v1/cs/configs?dataId=app1.properties&amp;group=DEFAULT_GROUP&amp;content=name=app1-alice&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="9"><li>观察日志</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">..</span>.
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:16.210  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> o.s.b.w.embedded.tomcat.TomcatWebServer  <span class="token builtin class-name">:</span> Tomcat started on port<span class="token punctuation">(</span>s<span class="token punctuation">)</span>: <span class="token number">8090</span> <span class="token punctuation">(</span>http<span class="token punctuation">)</span> with context path <span class="token string">&#39;&#39;</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:16.916  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> example.app1.App1                        <span class="token builtin class-name">:</span> Started App1 <span class="token keyword">in</span> <span class="token number">7.466</span> seconds <span class="token punctuation">(</span>JVM running <span class="token keyword">for</span> <span class="token number">8.807</span><span class="token punctuation">)</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:16.926  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.c.n.refresh.NacosContextRefresher    <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>Nacos Config<span class="token punctuation">]</span> Listening config: <span class="token assign-left variable">dataId</span><span class="token operator">=</span>app1.properties, <span class="token assign-left variable">group</span><span class="token operator">=</span>DEFAULT_GROUP
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:34:16.926  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> c.a.c.n.refresh.NacosContextRefresher    <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>Nacos Config<span class="token punctuation">]</span> Listening config: <span class="token assign-left variable">dataId</span><span class="token operator">=</span>app1, <span class="token assign-left variable">group</span><span class="token operator">=</span>DEFAULT_GROUP
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:41:28.615  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>nio-8090-exec-1<span class="token punctuation">]</span> o.a.c.c.C.<span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span>.<span class="token punctuation">[</span>localhost<span class="token punctuation">]</span>.<span class="token punctuation">[</span>/<span class="token punctuation">]</span>       <span class="token builtin class-name">:</span> Initializing Spring DispatcherServlet <span class="token string">&#39;dispatcherServlet&#39;</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:41:28.615  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>nio-8090-exec-1<span class="token punctuation">]</span> o.s.web.servlet.DispatcherServlet        <span class="token builtin class-name">:</span> Initializing Servlet <span class="token string">&#39;dispatcherServlet&#39;</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:41:28.616  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>nio-8090-exec-1<span class="token punctuation">]</span> o.s.web.servlet.DispatcherServlet        <span class="token builtin class-name">:</span> Completed initialization <span class="token keyword">in</span> <span class="token number">1</span> ms
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:42:48.257  WARN <span class="token number">30568</span> --- <span class="token punctuation">[</span>ternal.notifier<span class="token punctuation">]</span> c.a.c.n.c.NacosPropertySourceBuilder     <span class="token builtin class-name">:</span> Ignore the empty nacos configuration and get it based on dataId<span class="token punctuation">[</span>app1<span class="token punctuation">]</span> <span class="token operator">&amp;</span> group<span class="token punctuation">[</span>DEFAULT_GROUP<span class="token punctuation">]</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:42:48.263  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>ternal.notifier<span class="token punctuation">]</span> b.c.PropertySourceBootstrapConfiguration <span class="token builtin class-name">:</span> Located property source: <span class="token punctuation">[</span>BootstrapPropertySource <span class="token punctuation">{</span>name<span class="token operator">=</span><span class="token string">&#39;bootstrapProperties-app1.properties,DEFAULT_GROUP&#39;</span><span class="token punctuation">}</span>, BootstrapPropertySource <span class="token punctuation">{</span>name<span class="token operator">=</span><span class="token string">&#39;bootstrapProperties-app1,DEFAULT_GROUP&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:42:48.268  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>ternal.notifier<span class="token punctuation">]</span> o.s.boot.SpringApplication               <span class="token builtin class-name">:</span> No active profile set, falling back to <span class="token number">1</span> default profile: <span class="token string">&quot;default&quot;</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:42:48.275  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>ternal.notifier<span class="token punctuation">]</span> o.s.boot.SpringApplication               <span class="token builtin class-name">:</span> Started application <span class="token keyword">in</span> <span class="token number">0.842</span> seconds <span class="token punctuation">(</span>JVM running <span class="token keyword">for</span> <span class="token number">520.167</span><span class="token punctuation">)</span>
<span class="token number">2023</span>-06-27 <span class="token number">16</span>:42:48.293  INFO <span class="token number">30568</span> --- <span class="token punctuation">[</span>ternal.notifier<span class="token punctuation">]</span> o.s.c.e.event.RefreshEventListener       <span class="token builtin class-name">:</span> Refresh keys changed: <span class="token punctuation">[</span>name<span class="token punctuation">]</span>
<span class="token punctuation">..</span>.
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到应用已监听到配置变化。</p><ol start="10"><li>再次请求，验证结果。注意，此时不需要重启服务。</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-s</span> http://localhost:8090/config/name
app1-alice
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="服务发现" tabindex="-1"><a class="header-anchor" href="#服务发现" aria-hidden="true">#</a> 服务发现</h2><p>服务注册与发现最常用的地方是在 Spring Cloud，所以我们跳过使用 Nacos Open API 和 Java SDK 管理服务以及与 Spring Boot 整合的部分，关于这部分内容想了解的大佬可以自行查阅文档。</p><h3 id="整合-spring-cloud-1" tabindex="-1"><a class="header-anchor" href="#整合-spring-cloud-1" aria-hidden="true">#</a> 整合 Spring Cloud</h3><ol><li>修改 <code>app1</code> 构建脚本，添加 Nacos 服务注册发现依赖</li></ol><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// app1/build.gradle.kts</span>
dependencies <span class="token punctuation">{</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.cloud:spring-cloud-starter-bootstrap&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>修改配置，添加服务注册发现服务地址</li></ol><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># bootstrap.properties</span>
<span class="token key attr-name">spring.cloud.nacos.config.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:8848</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:8848</span>
<span class="token key attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">app1</span>
</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>通过 Spring Cloud 原生注解 <code>@EnableDiscoveryClient</code> 开启服务注册发现功能</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">example<span class="token punctuation">.</span>app1</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">EnableDiscoveryClient</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App1</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">App1</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>启动服务并通过 Nacos 管理界面验证服务注册情况</li></ol><figure><img src="`+N+`" alt="Nacos Service Register" tabindex="0" loading="lazy"><figcaption>Nacos Service Register</figcaption></figure><ol start="5"><li>新建子项目 <code>app2</code> 并修改根目录下的 <code>settings.gradle.kts</code> 文件</li></ol><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token comment">// settings.gradle.kts</span>
rootProject<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;nacos-playground&quot;</span></span>

<span class="token function">include</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;app1&quot;</span></span><span class="token punctuation">)</span>
<span class="token function">include</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;app2&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><br><br><br><div class="highlight-line"> </div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>编辑 <code>app2/build.gradle.kts</code></li></ol><div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code>dependencies <span class="token punctuation">{</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.boot:spring-boot-starter-web&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.cloud:spring-cloud-starter-bootstrap&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;org.springframework.cloud:spring-cloud-starter-loadbalancer&quot;</span></span><span class="token punctuation">)</span>
    <span class="token function">implementation</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>编辑 <code>app2</code> 配置文件</li></ol><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># application.properties</span>
<span class="token key attr-name">server.port</span><span class="token punctuation">=</span><span class="token value attr-value">8091</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># bootstrap.properties</span>
<span class="token key attr-name">spring.cloud.nacos.discovery.server-addr</span><span class="token punctuation">=</span><span class="token value attr-value">127.0.0.1:8848</span>
<span class="token key attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token value attr-value">app2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li><code>app2</code> 子项目代码</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// example.app2.App2</span>
<span class="token keyword">package</span> <span class="token namespace">example<span class="token punctuation">.</span>app2</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">EnableDiscoveryClient</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">App2</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">App2</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// example.app2.RestTemplateConfig</span>
<span class="token keyword">package</span> <span class="token namespace">example<span class="token punctuation">.</span>app2</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span></span><span class="token class-name">LoadBalanced</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@LoadBalanced</span>
    <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// example.app2.ConfigController</span>
<span class="token keyword">package</span> <span class="token namespace">example<span class="token punctuation">.</span>app2</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ConfigController</span><span class="token punctuation">(</span><span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>restTemplate <span class="token operator">=</span> restTemplate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">&quot;http://app1/config/name&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>注意这里请求的 URL 中需要填写目标服务的名称，例如 <code>app1</code> 而不是真实的 IP 和端口。</p></div><ol start="9"><li>启动 <code>app1</code>，<code>app2</code> 并请求 <code>app2</code> 验证服务发现及远程调用情况</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-s</span> http://localhost:8091/config/name
app1-alice
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到我们请求 <code>app2</code>，而 <code>app2</code> 去请求 <code>app1</code> 并向我们返回了结果。</p>`,39);function ln(un,rn){const a=o("ExternalLinkIcon");return i(),c("div",null,[n("p",null,[n("a",S,[s("Nacos"),t(a)]),s(" 是一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。")]),q,C,I,n("p",null,[s("构建好的安装包可以在 "),n("a",A,[s("Github Release 页面"),t(a)]),s("下载，本文写作时最新版本为 "),P,s("，下载地址如下：")]),F,n("p",null,[s("此时可通过浏览器打开 "),n("a",R,[s("http://localhost:8848/nacos"),t(a)]),s(" 进入 Nacos 控制台。")]),O,D,n("p",null,[s("让我们通过 "),n("a",T,[s("Nacos Open API"),t(a)]),s(" 发布一个配置，通过 "),E,s(" 调用如下接口发布配置：")]),j,n("div",L,[B,n("p",null,[s("这里的 cURL 命令是通过 "),z,s(" 调用的，如果没有安装的话也可以通过 "),n("a",U,[s("Postman"),t(a)]),s(" 调用。")])]),G,n("p",null,[s("我们的示例项目将通过 Gradle 构建，所以请先正确安装 "),n("a",M,[s("Gradle"),t(a)]),s("。")]),$,n("p",null,[s("更多关于 Java SDK 的操作请查阅"),n("a",J,[s("官方文档"),t(a)]),s("。")]),W,n("div",V,[K,n("ul",null,[H,n("li",null,[X,s(" 即为当前环境对应的 "),Y,s("，详情可以参考 "),n("a",Q,[s("Spring Boot文档"),t(a)]),s("。 注意：当 "),Z,s(" 为空时，对应的连接符 - 也将不存在，dataId 的拼接格式变成 "),nn]),sn])]),an,n("ol",tn,[n("li",null,[s("通过 "),n("a",en,[s("Nacos Open API"),t(a)]),s(" 向 Nacos Server 发布配置：dataId 为 "),pn,s("，内容为 "),on])]),cn])}const mn=p(x,[["render",ln],["__file","Nacos快速开始.html.vue"]]);export{mn as default};
